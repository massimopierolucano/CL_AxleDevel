<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <GVL Name="G" Id="{eef4e233-9823-4e3c-834f-ad07c940bdd3}">
    <Declaration><![CDATA[{attribute 'qualified_only'}
VAR_GLOBAL
  _stSystemStatus_AR      : ST_SystemStatus_AR;
  stSystemStatus_ARR      : REFERENCE TO ST_SystemStatus_AR := _stSystemStatus_AR;
  
  
  {attribute 'TcNcAxis' := '.L1LeftFront                     := CGSMini_R01AxisL1LeftFront;
                          .L1LeftBack                        := CGSMini_R01AxisL1LeftBack;
                          .L2RightFront                      := CGSMini_R01AxisL2RightFront;
                          .L2RightBack                       := CGSMini_R01AxisL2RightBack;
                          .Master                            := CGSMini_R01AxisMaster'}
  stAX : ST_Robot_Axes;
  
  (*
  {attribute 'TcNcAxis' := '.L1LeftFront                     := Sim_Robot01AxisLine1Front;
                          .L1LeftBack                        := Sim_Robot01AxisLine1Back;
                          .L2RightFront                       := Sim_Robot01AxisLine2Front;
                          .L2RightBack                        := Sim_Robot01AxisLine2Back;
                          .Master                           := Sim_Robot01AxisMaster'}
  stAxes : ST_Robot_Axes;*)
 
{attribute 'TcLinkTo':='.stAnaInN04_3054State.uiDataState   := TIIB[CGSMini_Robot01OnBoardBoxAnaInN04-EL3054]^InfoData^State;
                        .stAnaInN04_3054State.bWCState      := TIIB[CGSMini_Robot01OnBoardBoxAnaInN04-EL3054]^WcState^WcState;
                        .stOnboardBox_1100State.uiDataState := TIIB[CGSMini_Robot01OnboardBox-EK1100]^InfoData^State;
                        .stOutN01_2008State.uiDataState     := TIIB[CGSMini_Robot01OnBoardBoxOutN01-EL2008]^InfoData^State;
                        .stOutN01_2008State.bWCState        := TIIB[CGSMini_Robot01OnBoardBoxOutN01-EL2008]^WcState^WcState;
                        
                        .stLaserPos_State.uiDataState       := TIIB[CGSMini_Robot01Laser-SickDL100]^InfoData^State;
                        .stLaserPos_State.bWCState          := TIIB[CGSMini_Robot01Laser-SickDL100]^WcState^WcState;
                        .stLaserPos.udiDistanceRaw          := TIIB[CGSMini_Robot01Laser-SickDL100]^Distance^Distance;
                        
                        .stAnaOnboardSpare1.bTUnderRange    := TIIB[CGSMini_Robot01OnBoardBoxAnaInN04-EL3054]^Spare1^Status^Underrange;
                        .stAnaOnboardSpare1.bTOverRange     := TIIB[CGSMini_Robot01OnBoardBoxAnaInN04-EL3054]^Spare1^Status^Overrange;
                        .stAnaOnboardSpare1.bTLimit1        := TIIB[CGSMini_Robot01OnBoardBoxAnaInN04-EL3054]^Spare1^Status^Limit 1;
                        .stAnaOnboardSpare1.bTLimit2        := TIIB[CGSMini_Robot01OnBoardBoxAnaInN04-EL3054]^Spare1^Status^Limit 2;
                        .stAnaOnboardSpare1.bTError         := TIIB[CGSMini_Robot01OnBoardBoxAnaInN04-EL3054]^Spare1^Status^Error;
                        .stAnaOnboardSpare1.siAnaRaw        := TIIB[CGSMini_Robot01OnBoardBoxAnaInN04-EL3054]^Spare1^Value;
  
                        .stPwrSupplyAX8620.comState.uiDataState:= TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^InfoData^State;
                        .stPwrSupplyAX8620.comState.bWcState   := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^WcState^WcState;
                        .stPwrSupplyAX8620.sdiDcOutputShift := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^InfoData^DcOutputShift;
                        .stPwrSupplyAX8620.sdiDcInputShift  := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^InfoData^DcInputShift;
                        .stPwrSupplyAX8620.bOverTemp        := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^PSM Warning register^Warning^A2 Device overtemperature;  
                        .stPwrSupplyAX8620.bFanMalfunc      := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^PSM Warning register^Warning^A4 Fan malfunction;
                        .stPwrSupplyAX8620.bUnderVoltage    := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^PSM Warning register^Warning^A6 Mains undervoltage;
                        .stPwrSupplyAX8620.bOverVoltage     := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^PSM Warning register^Warning^A5 Mains overvoltage;
                        
                        .stDriverL1Left.comState             := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^CGSMini_Robot01OnboardAxisDriverL1Left-AX8206^InfoData^State;
                        .stDriverL1Left.sdiDcOutputShift     := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^CGSMini_Robot01OnboardAxisDriverL1Left-AX8206^InfoData^DcOutputShift;
                        .stDriverL1Left.sdiDcInputShift      := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^CGSMini_Robot01OnboardAxisDriverL1Left-AX8206^InfoData^DcInputShift;           
            
                        .stDriverL1Left.stFront.siIGBTTemp      := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^CGSMini_Robot01OnboardAxisDriverL1Left-AX8206^Front^Ch B AxisMain Inputs^IGBT temperature;
                        .stDriverL1Left.stFront.udMotorDIGIns   := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^CGSMini_Robot01OnboardAxisDriverL1Left-AX8206^Front^Ch B AxisMain Inputs^Ch B Digital inputs;   
                        .stDriverL1Left.stFront.rMotorTemp      := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^CGSMini_Robot01OnboardAxisDriverL1Left-AX8206^Front^Ch B SyncServoMotor Inputs^Actual motor temperature;
                        .stDriverL1Left.stFront.rMotorTorque    := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^CGSMini_Robot01OnboardAxisDriverL1Left-AX8206^Front^Ch B TorqueControl Inputs^Ch B Torque/force actual value;
                   
                        .stDriverL1Left.stBack.siIGBTTemp       := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^CGSMini_Robot01OnboardAxisDriverL1Left-AX8206^Back^Ch A AxisMain Inputs^IGBT temperature;                                                
                        .stDriverL1Left.stBack.udMotorDIGIns    := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^CGSMini_Robot01OnboardAxisDriverL1Left-AX8206^Back^Ch A AxisMain Inputs^Ch A Digital inputs;
                        .stDriverL1Left.stBack.rMotorTemp       := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^CGSMini_Robot01OnboardAxisDriverL1Left-AX8206^Back^Ch A SyncServoMotor Inputs^Actual motor temperature; 
                        .stDriverL1Left.stBack.rMotorTorque     := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^CGSMini_Robot01OnboardAxisDriverL1Left-AX8206^Back^Ch A TorqueControl Inputs^Ch A Torque/force actual value;

                        .stDriverL2Right.comState             := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^CGSMini_Robot01OnboardAxisDriverL2Right-AX8206^InfoData^State;
                        .stDriverL2Right.sdiDcOutputShift     := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^CGSMini_Robot01OnboardAxisDriverL2Right-AX8206^InfoData^DcOutputShift;
                        .stDriverL2Right.sdiDcInputShift      := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^CGSMini_Robot01OnboardAxisDriverL2Right-AX8206^InfoData^DcInputShift;      
                 
                        .stDriverL2Right.stFront.siIGBTTemp      := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^CGSMini_Robot01OnboardAxisDriverL2Right-AX8206^Front^Ch B AxisMain Inputs^IGBT temperature;
                        .stDriverL2Right.stFront.udMotorDIGIns   := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^CGSMini_Robot01OnboardAxisDriverL2Right-AX8206^Front^Ch B AxisMain Inputs^Ch B Digital inputs;  
                        .stDriverL2Right.stFront.rMotorTemp      := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^CGSMini_Robot01OnboardAxisDriverL2Right-AX8206^Front^Ch B SyncServoMotor Inputs^Actual motor temperature;
                        .stDriverL2Right.stFront.rMotorTorque    := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^CGSMini_Robot01OnboardAxisDriverL2Right-AX8206^Front^Ch B TorqueControl Inputs^Ch B Torque/force actual value;
                    
                        .stDriverL2Right.stBack.siIGBTTemp       := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^CGSMini_Robot01OnboardAxisDriverL2Right-AX8206^Back^Ch A AxisMain Inputs^IGBT temperature;
                        .stDriverL2Right.stBack.udMotorDIGIns    := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^CGSMini_Robot01OnboardAxisDriverL2Right-AX8206^Back^Ch A AxisMain Inputs^Ch A Digital inputs;                        
                        .stDriverL2Right.stBack.rMotorTemp       := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^CGSMini_Robot01OnboardAxisDriverL2Right-AX8206^Back^Ch A SyncServoMotor Inputs^Actual motor temperature;                       
                        .stDriverL2Right.stBack.rMotorTorque     := TIIB[CGSMini_Robot01OnboardAxisPwrSupply-AX8620]^CGSMini_Robot01OnboardAxisDriverL2Right-AX8206^Back^Ch A TorqueControl Inputs^Ch A Torque/force actual value;'}
  stIN AT %I*:ST_Robot_HWI;
 
  AxisL1LeftFront   : CL_AxisMCL1LeftFront;
  AxisL2RightFront  : CL_AxisMCL2RightFront;
  AxisL1LeftBack    : CL_AxisMCL1LeftBack;
  AxisL2RightBack   : CL_AxisMCL2RightBack;
  AxisMaster        : CL_AxisMCMaster;
END_VAR
]]></Declaration>
  </GVL>
</TcPlcObject>