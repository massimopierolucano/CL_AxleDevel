<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_testAxleMasterJog" Id="{e2f1bb32-fdc6-418f-a49e-b60b14043616}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_testAxleMasterJog  EXTENDS CL_MasterRootClass
VAR
 	stm	: UINT := 10;
  stIRL : ST_LineReference;
  bFW, bBW, b, bGearOut : BOOL := FALSE;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[G.AxisL1LeftFront(); 
G.AxisL2RightFront();
G.AxisL1LeftBack();
G.AxisL2RightBack();
G.AxisMaster();

Case01Hysto(stm);
CASE stm OF   
  10:
    stIRL.nThis := 0;
    stIRL.nFixedID := 1;
    b := G.AxDrvrL1LeftBack.Init(stDriverCom_P := ADR(G.stIN.stDriverL1Left.comState), stDriverCh_P := ADR(G.stIN.stDriverL1Left.stBack));
    
    b := b AND G.AxisL1LeftFront.Init(stIrrLine := stIRL, stAxisMotor_P := ADR(G.stAX.L1LeftFront), stAxisMaster_P := ADR(G.stAX.Master), AxisDriver_P := ADR(G.AxDrvrL1LeftBack));
    b := b AND G.AxisL2RightFront.Init(stIrrLine := stIRL, stAxisMotor_P := ADR(G.stAX.L2RightFront), stAxisMaster_P := ADR(G.stAX.Master), AxisDriver_P := ADR(G.AxDrvrL1LeftBack));
    b := b AND G.AxisL1LeftBack.Init(stIrrLine := stIRL, stAxisMotor_P := ADR(G.stAX.L1LeftBack), stAxisMaster_P := ADR(G.stAX.Master), AxisDriver_P := ADR(G.AxDrvrL1LeftBack));
    b := b AND G.AxisL2RightBack.Init(stIrrLine := stIRL, stAxisMotor_P := ADR(G.stAX.L2RightBack), stAxisMaster_P := ADR(G.stAX.Master), AxisDriver_P := ADR(G.AxDrvrL1LeftBack));
    b := b AND G.AxisMaster.Init(stIrrLine := stIRL, stAxisMotor_P := ADR(G.stAX.Master), stAxisMaster_P := ADR(G.stAX.Master), AxisDriver_P := ADR(G.AxDrvrL1LeftBack));
    if b then
      stm := 1000;
		END_IF   
 
  //for the moment it doesn't work...waiting for an answer _stMotorAxis_R.Status.Coupled doesn't return true even if the axis is coupled
  900:
    IF NOT G.AxisL1LeftFront.IsBusy AND NOT G.AxisL2RightFront.IsBusy AND NOT G.AxisL1LeftBack.IsBusy AND NOT G.AxisL2RightBack.IsBusy THEN
      G.AxisL1LeftFront.RequGearOut();
      G.AxisL2RightFront.RequGearOut();
      G.AxisL1LeftBack.RequGearOut();
      G.AxisL2RightBack.RequGearOut();
      stm := 910;
    END_IF    
  910:
    IF G.AxisL1LeftFront.IsDone AND G.AxisL2RightFront.IsDone AND G.AxisL1LeftBack.IsDone AND G.AxisL2RightBack.IsDone THEN
      stm := 920;
    END_IF   
  920:
    IF NOT G.AxisL1LeftFront.IsError AND NOT G.AxisL2RightFront.IsError AND NOT G.AxisL1LeftBack.IsError AND NOT G.AxisL2RightBack.IsError THEN
      stm := 1000;
    ELSE
      stm := 0;
    END_IF
  
  //ATTENTION: to power-on axis, they MUST be decoupled 
  1000:
    IF NOT G.AxisL1LeftFront.IsBusy AND NOT G.AxisL2RightFront.IsBusy AND NOT G.AxisL1LeftBack.IsBusy AND NOT G.AxisL2RightBack.IsBusy THEN
      G.AxisL1LeftFront.RequPowerOn();
      G.AxisL2RightFront.RequPowerOn();
      G.AxisL1LeftBack.RequPowerOn();
      G.AxisL2RightBack.RequPowerOn();
      stm := 1120;
    END_IF
    
  1120:
    IF G.AxisL1LeftFront.IsDone AND G.AxisL2RightFront.IsDone AND G.AxisL1LeftBack.IsDone AND G.AxisL2RightBack.IsDone THEN
      stm := 1130;
    END_IF
    
  1130:
    IF NOT G.AxisL1LeftFront.IsError AND NOT G.AxisL2RightFront.IsError AND NOT G.AxisL1LeftBack.IsError AND NOT G.AxisL2RightBack.IsError THEN
      stm := 1135;
    ELSE
      stm := 0;
    END_IF
  
  1135:
    if NOT G.AxisMaster.IsBusy then
      G.AxisMaster.RequPowerOn();
      stm := 1140;
		END_IF
    
  1140:
    IF G.AxisMaster.IsDone THEN 
      stm := 1150;
    END_IF
    
  1150:
    IF NOT G.AxisMaster.IsError THEN
      stm := 1160;
    ELSE
      stm := 0;
    END_IF
  
  1160:
    IF NOT G.AxisL1LeftFront.IsBusy AND NOT G.AxisL2RightFront.IsBusy AND NOT G.AxisL1LeftBack.IsBusy AND NOT G.AxisL2RightBack.IsBusy THEN
      G.AxisL1LeftFront.RequGearInDyn();
      G.AxisL2RightFront.RequGearInDyn();
      G.AxisL1LeftBack.RequGearInDyn();
      G.AxisL2RightBack.RequGearInDyn();
      stm := 1170;
    END_IF
  
  1170:
    IF G.AxisL1LeftFront.IsDone AND G.AxisL2RightFront.IsDone AND G.AxisL1LeftBack.IsDone AND G.AxisL2RightBack.IsDone THEN
      stm := 1180;
    end_if
    
  1180:
    IF NOT G.AxisL1LeftFront.IsError AND NOT G.AxisL2RightFront.IsError AND NOT G.AxisL1LeftBack.IsError AND NOT G.AxisL2RightBack.IsError THEN
      stm := 1190;
    ELSE
      stm := 0;
    END_IF 
  
  1190:
    if NOT G.AxisMaster.IsBusy then
      G.AxisMaster.RequJogAxisMaster();
      stm := 1200;
    end_if
   
  1200:
    if G.AxisMaster.IsDone then
      stm := 1210;
    end_if
      
  1210:
    if not G.AxisMaster.IsError then
      stm := 1300;
    end_if

  1300:
    bFW := true;
    bBW := FALSE;
    G.AxisMaster.JogExec(bExecJogFWIn := bFW, bExecJogBWIn := bBW);
    if not bGearOut then
      stm := 1300;
    else
      stm := 1310;
    end_if
  
  1310:
    G.AxisMaster.JogExec(bExecJogFWIn := false, bExecJogBWIn := false);
    stm := 1320;
  
  1320:
    IF NOT G.AxisL1LeftFront.IsBusy AND NOT G.AxisL2RightFront.IsBusy AND NOT G.AxisL1LeftBack.IsBusy AND NOT G.AxisL2RightBack.IsBusy and NOT G.AxisMaster.IsBusy THEN
      G.AxisMaster.RequStop();
      G.AxisL1LeftFront.RequStop();
      G.AxisL2RightFront.RequStop();
      G.AxisL1LeftBack.RequStop();
      G.AxisL2RightBack.RequStop();
      stm := 1330;
    END_IF
    
  1330:
    IF G.AxisL1LeftFront.IsDone AND G.AxisL2RightFront.IsDone AND G.AxisL1LeftBack.IsDone AND G.AxisL2RightBack.IsDone THEN
      stm := 1340;
    end_if

  1340:
    IF NOT G.AxisL1LeftFront.IsError AND NOT G.AxisL2RightFront.IsError AND NOT G.AxisL1LeftBack.IsError AND NOT G.AxisL2RightBack.IsError and not G.AxisMaster.IsError THEN
      stm := 1400;
    ELSE
      stm := 0;
    END_IF 

  1400:
    IF NOT G.AxisL1LeftFront.IsBusy AND NOT G.AxisL2RightFront.IsBusy AND NOT G.AxisL1LeftBack.IsBusy AND NOT G.AxisL2RightBack.IsBusy THEN
      G.AxisL1LeftFront.RequGearOut();
      G.AxisL2RightFront.RequGearOut();
      G.AxisL1LeftBack.RequGearOut();
      G.AxisL2RightBack.RequGearOut();
      stm := 1410;
    END_IF
    
  1410:
    IF G.AxisL1LeftFront.IsDone AND G.AxisL2RightFront.IsDone AND G.AxisL1LeftBack.IsDone AND G.AxisL2RightBack.IsDone THEN
      stm := 1420;
    end_if
    
  1420:
    IF NOT G.AxisL1LeftFront.IsError AND NOT G.AxisL2RightFront.IsError AND NOT G.AxisL1LeftBack.IsError AND NOT G.AxisL2RightBack.IsError THEN
      stm := 0;
    ELSE
      stm := 0;
    END_IF 

  0:; //park 
END_CASE
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>